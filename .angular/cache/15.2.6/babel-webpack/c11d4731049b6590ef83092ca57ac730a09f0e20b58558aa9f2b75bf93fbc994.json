{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../companies.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/companies\", a1];\n};\nfunction CompaniesComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"a\", 5)(3, \"h2\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"h2\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, item_r1.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Company name: \", item_r1.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"City: \", item_r1.city, \" \");\n  }\n}\nexport class CompaniesComponent {\n  constructor(companyService) {\n    this.companyService = companyService;\n    this.companies = [];\n  }\n  ngOnInit() {\n    this.getAllCompanies();\n  }\n  getAllCompanies() {\n    this.companyService.getCompanies().subscribe(data => this.companies = data);\n  }\n}\nCompaniesComponent.ɵfac = function CompaniesComponent_Factory(t) {\n  return new (t || CompaniesComponent)(i0.ɵɵdirectiveInject(i1.CompaniesService));\n};\nCompaniesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CompaniesComponent,\n  selectors: [[\"app-companies\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[\"id\", \"main\"], [\"id\", \"companies\"], [\"class\", \"items\", 4, \"ngFor\", \"ngForOf\"], [1, \"items\"], [1, \"item-details\"], [\"id\", \"link-vacancy\", 3, \"routerLink\"]],\n  template: function CompaniesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, CompaniesComponent_div_2_Template, 7, 5, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.companies);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink],\n  styles: [\".items[_ngcontent-%COMP%] {\\r\\n  border: 1px solid green;\\r\\n  border-radius: 5px;\\r\\n  padding: 10px;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n#item-details[_ngcontent-%COMP%] {\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n#link-vacancy[_ngcontent-%COMP%]:hover {\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n#link-vacancy[_ngcontent-%COMP%] {\\r\\n  color: black;\\r\\n  text-decoration: none;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcGFuaWVzL2NvbXBhbmllcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0VBQ3ZCLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsWUFBWTtFQUNaLHFCQUFxQjtBQUN2QiIsInNvdXJjZXNDb250ZW50IjpbIi5pdGVtcyB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZ3JlZW47XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuI2l0ZW0tZGV0YWlscyB7XHJcbiAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuI2xpbmstdmFjYW5jeTpob3ZlciB7XHJcbiAgY29sb3I6IHJlZDtcclxufVxyXG5cclxuI2xpbmstdmFjYW5jeSB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAEIA,8BAAsD;IAG5CA,YAA4B;IAAAA,iBAAK;IAEvCA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;;;;IAHNA,eAAsC;IAAtCA,mEAAsC;IACvDA,eAA4B;IAA5BA,0DAA4B;IAE9BA,eAAoB;IAApBA,kDAAoB;;;ACEhC,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,cAAgC;IAAhC,mBAAc,GAAdA,cAAc;IAChC,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;EAEAC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAe;IACb,IAAI,CAACH,cAAc,CAACI,YAAY,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAM,IAAI,CAACL,SAAS,GAAGK,IAAK,CAAC;EACjF;;AAbWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/Bd,8BAAiB;MAEbA,mEAOM;MACRA,iBAAM;;;MARoCA,eAAY;MAAZA,uCAAY","names":["i0","CompaniesComponent","constructor","companyService","companies","ngOnInit","getAllCompanies","getCompanies","subscribe","data","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Serikbolsyn\\Desktop\\Serikbolsyn\\Web\\Lab 10\\hh-front\\src\\app\\companies\\companies.component.html","C:\\Users\\Serikbolsyn\\Desktop\\Serikbolsyn\\Web\\Lab 10\\hh-front\\src\\app\\companies\\companies.component.ts"],"sourcesContent":["<div id = \"main\">\n  <div id = \"companies\">\n    <div class = \"items\" *ngFor = \"let item of companies\">\n      <div class = \"item-details\">\n        <a id = \"link-vacancy\" [routerLink]=\"['/companies', item.id]\">\n          <h2>Company name: {{item.name}} </h2>\n        </a>\n        <h2>City: {{item.city}} </h2>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport { CompaniesService } from \"../companies.service\";\nimport { Company } from \"../models\";\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './companies.component.html',\n  styleUrls: ['./companies.component.css']\n})\nexport class CompaniesComponent implements OnInit{\n  companies: Company[];\n\n  constructor(private companyService: CompaniesService) {\n    this.companies = [];\n  }\n\n  ngOnInit(){\n    this.getAllCompanies()\n  }\n\n  getAllCompanies() {\n    this.companyService.getCompanies().subscribe((data) => (this.companies = data));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}